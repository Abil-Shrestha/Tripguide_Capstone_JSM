// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(cuid())
  name          String?
  email         String?         @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Booking       Booking[]
  DeviceHistory DeviceHistory[]
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Booking {
  id                       String   @id @default(cuid())
  user_id                  String
  booking_start_date       DateTime
  booking_end_date         DateTime
  stripe_payment_intent_id String
  booking_status           String
  booked_on_date           DateTime @default(now())
  booking_price            Float
  user                     User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model DeviceHistory {
  device_id      String   @id @default(cuid())
  user_id        String
  device_name    String
  device_type    String
  isLoggedIn     Boolean  @default(true)
  logged_in_date DateTime @default(now())
  user           User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
}
